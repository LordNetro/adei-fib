```{r}
```{r}
```{r}
plot(factorModel,  col = rainbow(24))
plot(factorModel, main="Factorized Engine Size Histogram",  col = rainbow(24))
jouts<-rep(0,2*ncol(bmw))  # columns - variables
#######################################################
imis<-rep(0,nrow(bmw))  # rows - trips
jmis<-rep(0,2*ncol(bmw))  # columns - variables
######################################################
mis1<-countNA(bmw)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmw))  # rows - trips
jouts<-rep(0,2*ncol(bmw))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmw))  # rows - trips
jerrs<-rep(0,2*ncol(bmw))  # columns - variables
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
#######################################################
imis<-rep(0,nrow(df))  # rows - trips
jmis<-rep(0,2*ncol(df))  # columns - variables
######################################################
mis1<-countNA(df)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
imis<-rep(0,nrow(df))  # rows - trips
#######################################################
imis<-rep(0,nrow(bmw))  # rows - trips
jmis<-rep(0,2*ncol(bmw))  # columns - variables
######################################################
mis1<-countNA(bmw)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmw))  # rows - trips
jouts<-rep(0,2*ncol(bmw))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmw))  # rows - trips
jerrs<-rep(0,2*ncol(bmw))  # columns - variables
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,2*ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,2*ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,2*ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(bmwVariables ==0)
ierrs[sel]<-ierrs[sel]+1
jerrs[9]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
df[sel,"engineSize"]<-NA
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[sel,"engineSize"]<-NA
selmiss <- sel
View(bmwVariables)
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,2*ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,2*ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,2*ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(bmwVariables ==0)
ierrs[sel]<-ierrs[sel]+1
jerrs[9]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[sel,"engineSize"]<-NA
selmiss <- sel
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(bmwVariables$engineSize ==0)
ierrs[sel]<-ierrs[sel]+1
jerrs[9]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[sel,"engineSize"]<-NA
selmiss <- sel
View(mis1)
summary(bmwVariables$engineSize)
summary(ierrs)
summary(jerrs)
ierrs
jerrs
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,2*ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,2*ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,2*ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(bmwVariables$engineSize ==0)
ierrs[sel]<-ierrs[sel]+1
jerrs[2]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[sel,"engineSize"]<-NA
selmiss <- sel
summary(bmwVariables$engineSize)
ierrs
jerrs
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# It is a quantitive variable  Non-possible values will be recoded to NA
sel<-which(bmwVariables$engineSize ==0)
ierrs[sel]<-ierrs[sel]+1
jerrs[2]<-length(sel)
sel                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[sel,"engineSize"]<-NA
selmiss <- sel
summary(bmwVariables$engineSize)
ierrs
jerrs
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# EngineSize
# It is a quantitive variable  Non-possible values will be recoded to NA
selEngine<-which(bmwVariables$engineSize ==0)
ierrs[selEngine]<-ierrs[selEngine]+1
jerrs[2]<-length(selEngine)
selEngine                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[selEngine,"engineSize"]<-NA
selmissEngine <- selEngine
# Price
# It is a quantitive variable  Non-possible values will be recoded to NA
selPrice<-which(bmwVariables$price ==0)
ierrs[selPrice]<-ierrs[selPrice]+1
jerrs[1]<-length(selPrice)
selPrice                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[selPrice,"price"]<-NA
selmissPrice <- selPrice
summary(bmwVariables$engineSize)
summary(bmwVariables$price)
ierrs
jerrs
# Price
# It is a quantitive variable  Non-possible values will be recoded to NA
selPrice<-which(bmwVariables$price <=0)
ierrs[selPrice]<-ierrs[selPrice]+1
jerrs[1]<-length(selPrice)
selPrice                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[selPrice,"price"]<-NA
selmissPrice <- selPrice
summary(bmwVariables$engineSize)
summary(bmwVariables$price)
ierrs
jerrs
Boxplot(bmwVariables$price)
var_out<-calcQ(bmwVariables$price)
library(Boxplot)
Boxplot(bmwVariables$price)
boxplot(bmwVariables$price)
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
Boxplot(bmwVariables$price)
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
var_out<-calcQ(bmwVariables$price)
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
abline(h=var_out$souts,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
par(mfrow=c(1,1))
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
var_out
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
summary(bmwVariables$price)
Q1 <- quantile(bmwVariables$price, 0.25)
Q3 <- quantile(bmwVariables$price, 0.75)
IQR <- Q3 - Q1
upper_bound <- Q3 + 1.5 * IQR
lower_bound <- Q1 - 1.5 * IQR
upper_bound
lower_bound
abline(h=upper_bound,col="red")
abline(h=lower_bound,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
Q1 <- quantile(bmwVariables$price, 0.25)
Q3 <- quantile(bmwVariables$price, 0.75)
IQR <- Q3 - Q1
upper_bound <- Q3 + 1.5 * IQR
lower_bound <- Q1 - 1.5 * IQR
upper_bound
lower_bound
abline(h=upper_bound,col="red")
abline(h=lower_bound,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
var_out<-calcQ(bmwVariables$price)
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[3]<-length(llout)
#df[llout,"price"]<-NA
summary(bmwVariables$price)
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[0]<-length(llout)
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[0]<-length(llout)
jouts
#df[llout,"price"]<-NA
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,ncol(bmwVariables))  # columns - variables
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,ncol(bmwVariables))  # columns - variables
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# EngineSize
# It is a quantitive variable  Non-possible values will be recoded to NA
selEngine<-which(bmwVariables$engineSize ==0)
ierrs[selEngine]<-ierrs[selEngine]+1
jerrs[2]<-length(selEngine)
bmwVariables <- data.frame(price = bmw$price, engineSize = bmw$engineSize)
#######################################################
imis<-rep(0,nrow(bmwVariables))  # rows - trips
jmis<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
mis1<-countNA(bmwVariables)
imis<-mis1$mis_ind
mis1$mis_col # Number of missings for the current set of variables
#######################################################
iouts<-rep(0,nrow(bmwVariables))  # rows - trips
jouts<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
#######################################################
ierrs<-rep(0,nrow(bmwVariables))  # rows - trips
jerrs<-rep(0,ncol(bmwVariables))  # columns - variables
######################################################
bmwVariables[which(bmwVariables[,"engineSize"]==0),]
# EngineSize
# It is a quantitive variable  Non-possible values will be recoded to NA
selEngine<-which(bmwVariables$engineSize ==0)
ierrs[selEngine]<-ierrs[selEngine]+1
jerrs[2]<-length(selEngine)
selEngine                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[selEngine,"engineSize"]<-NA
selmissEngine <- selEngine
# Price
# It is a quantitive variable  Non-possible values will be recoded to NA
selPrice<-which(bmwVariables$price <=0)
ierrs[selPrice]<-ierrs[selPrice]+1
jerrs[1]<-length(selPrice)
selPrice                 #### sel contains the rownames of the individuals with "0"
#                        as  value for engineSize
# df[sel,"engineSize"]<-3    # non-possible values are replaced by NA, missing value symbol in R
bmwVariables[selPrice,"price"]<-NA
selmissPrice <- selPrice
summary(bmwVariables$engineSize)
summary(bmwVariables$price)
ierrs
jerrs
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<0)|(bmwVariables$price>60000))
iouts[llout]<-iouts[llout]+1
jouts[0]<-length(llout)
jouts
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<var_out$souti)|(bmwVariables$price>var_out$souts))
iouts[llout]<-iouts[llout]+1
jouts[0]<-length(llout)
jouts
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_out<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
var_out
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((bmwVariables$price<var_out$souti)|(bmwVariables$price>var_out$souts))
iouts[llout]<-iouts[llout]+1
jouts[1]<-length(llout)
jouts
#df[llout,"price"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_outPrice<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
abline(h=var_outPrice$souts,col="red")
abline(h=var_outPrice$souti,col="red")
lloutPrice<-which((bmwVariables$price<var_outPrice$souti)|(bmwVariables$price>var_outPrice$souts))
iouts[lloutPrice]<-iouts[lloutPrice]+1
jouts[1]<-length(lloutPrice)
boxplot(bmwVariables$engineSize, main="Boxplot of Engine Size", ylab="Engine Size")
var_outEngine<-calcQ(bmwVariables$engineSize)
summary(bmwVariables$engineSize)
abline(h=var_outEngine$souts,col="red")
abline(h=var_outEngine$souti,col="red")
lloutEngine<-which((bmwVariables$price<var_outEngine$souti)|(bmwVariables$price>var_outEngine$souts))
iouts[lloutEngine]<-iouts[lloutEngine]+1
jouts[1]<-length(lloutEngine)
jouts
#df[llout,"engineSize"]<-NA
boxplot(bmwVariables$price, main="Boxplot of Price", ylab="Price")
var_outPrice<-calcQ(bmwVariables$price)
summary(bmwVariables$price)
abline(h=var_outPrice$souts,col="red")
abline(h=var_outPrice$souti,col="red")
lloutPrice<-which((bmwVariables$price<var_outPrice$souti)|(bmwVariables$price>var_outPrice$souts))
iouts[lloutPrice]<-iouts[lloutPrice]+1
jouts[1]<-length(lloutPrice)
boxplot(bmwVariables$engineSize, main="Boxplot of Engine Size", ylab="Engine Size")
var_outEngine<-calcQ(bmwVariables$engineSize)
summary(bmwVariables$engineSize)
abline(h=var_outEngine$souts,col="red")
abline(h=var_outEngine$souti,col="red")
lloutEngine<-which((bmwVariables$price<var_outEngine$souti)|(bmwVariables$price>var_outEngine$souts))
iouts[lloutEngine]<-iouts[lloutEngine]+1
jouts[2]<-length(lloutEngine)
jouts
#df[llout,"engineSize"]<-NA
