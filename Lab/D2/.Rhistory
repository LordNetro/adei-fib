citation()
# install.packages("car")
library(car)
data(Davis)
attributes(Davis)
citation()
# install.packages("car")
library(car)
data(Davis)
attributes(Davis)
# Numeric Univariant Description
summary(Davis)
# Rows and columns of data.frame Davis
dim(Davis)
# Histograms:
par(mfrow=c(2,2))
hist(Davis$weight)
hist(Davis$weight,10)
hist(Davis$weight,10,col="blue")
hist(Davis$weight,10,col=rainbow(10))
knitr::opts_chunk$set(echo = TRUE)
load("Cars.RData")
unique(df$manufacturer)
knitr::opts_chunk$set(echo = TRUE)
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
rm(package.check, requiredPackages)
load("Cars_Data_Del1.RData")
summary(df$transmission)
vars_dis <- c("year", "transmission", "mpg", "model", "manufacturer", "fuelType")
vars_con <- c("mileage", "tax")
vars_res <- c("price", "engineSize")
res.pca <- PCA(df[,vars_con])
eigenvalues <- res.pca$eig
eigenvalues
eigenvalues[1,]
rm(eigenvalues)
fviz_screeplot(
res.pca,
addlabels=TRUE,
ylim=c(0,70),
barfill="lightgreen",
barcolor="lightgreen",
linecolor = "darkgreen",
main="Percentage of Variance of PCA"
)
fviz_pca_ind(res.pca, col.ind="contrib", geom = "point") +
scale_color_gradient2(mid="lightgreen", high="red")
summary(df$tax)
summary(df$mileage)
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]] | row.names(df) %in% row.names(df)[rang[1]]), 1:10]
fviz_pca_ind(res.pca, col.ind = "darkgreen", select.ind = list(names=contrib.extremes))
summary(df$tax)
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, col.ind = "darkgreen", select.ind = list(names=contrib.extremes))
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]] | row.names(df) %in% row.names(df)[rang[1]]), 1:10]
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, col.ind = "darkgreen", select.ind = list(names=contrib.extremes))
```{r}
rm(contrib.extremes, rang)
res.des <- dimdesc(res.pca, axes=1:2)
res.des
fviz_contrib(  ## contributions of variables to PC1
res.pca,
fill = "lightgreen",
color = "darkgreen",
choice = "var",
axes = 1,
top = 6)
res.des$Dim.1
fviz_contrib(  ## contributions of variables to PC1
res.pca,
fill = "lightgreen",
color = "darkgreen",
choice = "var",
axes = 2,
top = 6)
res.des$Dim.2
res.pca <- PCA(df[,c(vars_con, vars_dis, vars_res)], quanti.sup = c("price", "engineSize"), quali.sup = c("year", "transmission", "mpg", "model", "manufacturer", "fuelType"))
plot(res.pca$ind$coord[,1], res.pca$ind$coord[,2], pch=19, col="grey30", xlab = "PCA X axis", ylab = "PCA Y axis")
points(res.pca$quali.sup$coord[,1], res.pca$quali.sup$coord[,2], pch=15, col="lightgreen")
lines(res.pca$quali.sup$coord[3:4,1], res.pca$quali.sup$coord[3:4,2], lwd=2, lty=2, col="coral")
text(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],labels=names(res.pca$quali.sup$coord[,1]),col="lightgreen",cex=0.5)
plot(res.pca$ind$coord[,1], res.pca$ind$coord[,2], pch=19, col="grey30", xlab = "PCA X axis", ylab = "PCA Y axis")
points(res.pca$quali.sup$coord[,1], res.pca$quali.sup$coord[,2], pch=15, col="lightgreen")
lines(res.pca$quali.sup$coord[3:4,1], res.pca$quali.sup$coord[3:4,2], lwd=2, lty=2, col="coral")
text(res.pca$quali.sup$coord[,1],res.pca$quali.sup$coord[,2],labels=names(res.pca$quali.sup$coord[,1]),col="lightgreen",cex=0.5)
rm(res.des)
compPrincipals <- res.pca$ind$coord[,1:2]
dim(compPrincipals)
head(compPrincipals)
fviz_nbclust(compPrincipals, kmeans, method = "silhouette")
distCP<-dist(compPrincipals)
kmeansCP<-kmeans(distCP, 2, iter.max=30, trace=TRUE)
inercia <- 100*(kmeansCP$betweenss/kmeansCP$totss)
inercia
df$nClustKM<-0
df$nClustKM<-kmeansCP$cluster
df$nClustKM<-factor(df$nClustKM)
barplot(table(df$nClustKM),col="lightgreen",border="darkgreen",main="Observacions per cluster amb K-means")
rm(distCP, kmeansCP, inercia, compPrincipals)
dim(df)
res.cat <-catdes(df,ncol(df))
res.cat$category[1]
res.cat$category[2]
res.cat$quanti.var
res.cat$quanti[1]
res.cat$quanti[2]
res.hcpc <- HCPC(res.pca,nb.clust = -1, order = TRUE)
table(res.hcpc$data.clust$clust)
barplot(summary(res.hcpc$data.clust$clust), col="lightgreen", border="darkgreen", main="Individuals in each cluster")
names(res.hcpc$desc.var)
res.hcpc$desc.var$quanti
res.hcpc$desc.var$category
res.hcpc$desc.var$quanti.var
res.hcpc$desc.var$quanti
res.hcpc$desc.ind$para
setwd("~/GitHub/adei-fib/Lab/D2")
setwd("C:/Users/marco/.node-red/uibuilder/adei-fib/Lab/D2")
