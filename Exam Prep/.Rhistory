citation()
# install.packages("car")
library(car)
data(Davis)
attributes(Davis)
citation()
# install.packages("car")
library(car)
data(Davis)
attributes(Davis)
# Numeric Univariant Description
summary(Davis)
# Rows and columns of data.frame Davis
dim(Davis)
# Histograms:
par(mfrow=c(2,2))
hist(Davis$weight)
hist(Davis$weight,10)
hist(Davis$weight,10,col="blue")
hist(Davis$weight,10,col=rainbow(10))
setwd("~/GitHub/adei-fib/Exam Prep")
knitr::opts_chunk$set(echo = TRUE)
load("MyOldCars-1000Clean.RData")
summary(df)
## 1
```{r}
unique(df[,"manufacturer"])
unique(df$manufacturer)
nrow(df)
str(df)
load("Cars.RData")
summary(df)
unique(df$manufacturer)
nrow(df)
unique(df$manufacturer)
nrow(df)
str(df)
df$model <- factor(df$model)
df$transmission <- factor(df$transmission)
df$fuelType <- factor(df$fuelType)
df$manufacturer <- factor(df$manufacturer)
str(df)
summary(df)
df$car_id <- as.character(c(1:nrow(df)))
summary(df)
# Missings
if(is.na(df)){
print("There are missings")
}else{
print("There are not missings")
}
# Missings
if(any(is.na(df))){
print("There are missings")
}else{
print("There are not missings")
}
# Missings
if(any(is.na(df))){
print("There are missings")
}else{
print("There are no missings")
}
View(df)
# Errors
df[which(df$engineSize <= 0), "engineSize"] <- NA
# Missings
if(any(is.na(df))){
print("There are missings")
}else{
print("There are no missings")
}
hist(df$year)
plot(df$fuelType)
df[which(df$fuelType == "Other"), "fuelType"] <- NA
hist(df$mileage)
df[which(df$mileage >= 250000), "mileage"] <- NA
hist(df$mpg)
barplot(df$mpg)
plot(df$mpg)
df[which(df$fuelType == "Hybrid" && df$mpg <= 20), "mpg"] <- NA
df[which(df$fuelType == "Hybrid" & df$mpg <= 20), "mpg"] <- NA
# affected vars
n_missings <- colSums(is.na(df))
n_missings
calcQ <- function(x){
s.x <- summary(x)
q3 = s.x[5]
q1 = s.x[2]
iqr <- q3 - q1
list(souti=q1-3*iqr,mouti=q1-1.5*iqr,min = s.x[1], q1=q1, q2=s.x[3],q3=q3,max=s.x[6], mouts=q3+1.5*iqr, souts=q3+3*iqr)
}
# Outliers
var_out <- calcQ(df$price)
df[which((df$price < var_out$souti) | (df$price > var_out$souts))] <- NA
df[which((df$price < var_out$souti) | (df$price > var_out$souts)), "price"] <- NA
load("Cars.RData")
df$model <- factor(df$model)
df$transmission <- factor(df$transmission)
df$fuelType <- factor(df$fuelType)
df$manufacturer <- factor(df$manufacturer)
df$car_id <- as.character(c(1:nrow(df)))
# Errors
df[which(df$engineSize <= 0), "engineSize"] <- NA
hist(df$year)
plot(df$fuelType)
df[which(df$fuelType == "Other"), "fuelType"] <- NA
hist(df$mileage)
df[which(df$mileage >= 250000), "mileage"] <- NA
plot(df$mpg)
df[which(df$fuelType == "Hybrid" & df$mpg <= 20), "mpg"] <- NA
# affected vars
n_missings <- colSums(is.na(df))
n_missings
calcQ <- function(x){
s.x <- summary(x)
q3 = s.x[5]
q1 = s.x[2]
iqr <- q3 - q1
list(souti=q1-3*iqr,mouti=q1-1.5*iqr,min = s.x[1], q1=q1, q2=s.x[3],q3=q3,max=s.x[6], mouts=q3+1.5*iqr, souts=q3+3*iqr)
}
# Outliers
var_out <- calcQ(df$price)
llout_price <- df[which((df$price < var_out$souti) | (df$price > var_out$souts)), "price"]
hist(llout_price)
plot(llout_price)
barplot(llout_price)
hsit(llout_price)
hist(llout_price)
llout_price
df[llout_price, "price"] <- NA
var_out <- calcQ(df$mpg)
llout_mpg <- df[which((df$mpg < var_out$souti) | (df$mpg > var_out$souts))]
, "price"
llout_mpg <- df[which((df$mpg < var_out$souti) | (df$mpg > var_out$souts)), "price"]
llout_mpg
df[llout_mpg, "mpg"] <- NA
llout_mpg <- df[which((df$mpg < var_out$souti) | (df$mpg > var_out$souts)), "mpg"]
llout_mpg
df[llout_mpg, "mpg"] <- NA
var_out <- calcQ(df$mileage)
llout_mileage <- df[which((df$mileage < var_out$souti) | (df$mileage > var_out$souts)), "mileage"]
llout_mileage
df[llout_mileage, "mileage"] <- NA
var_out <- calcQ(df$engineSize)
llout_engineSize <- df[which((df$engineSize < var_out$souti) | (df$engineSize > var_out$souts)), "engineSize"]
llout_engineSize
df[llout_engineSize, "engineSize"] <- NA
n_missings <- colSums(is.na(df))
n_missings
n_missings <- colSums(any(is.na(df)))
n_missings
n_missings
n_missings <- colSums(any(is.na(df)))
n_missings <- colSums(is.na(df))
n_missings
load("Cars.RData")
load("Cars.RData")
df$model <- factor(df$model)
df$transmission <- factor(df$transmission)
df$fuelType <- factor(df$fuelType)
df$manufacturer <- factor(df$manufacturer)
df$car_id <- as.character(c(1:nrow(df)))
# Errors
df[which(df$engineSize <= 0), "engineSize"] <- NA
hist(df$year)
plot(df$fuelType)
df[which(df$fuelType == "Other"), "fuelType"] <- NA
hist(df$mileage)
df[which(df$mileage >= 250000), "mileage"] <- NA
plot(df$mpg)
df[which(df$fuelType == "Hybrid" & df$mpg <= 20), "mpg"] <- NA
# affected vars
n_missings <- colSums(is.na(df))
n_missings
calcQ <- function(x){
s.x <- summary(x)
q3 = s.x[5]
q1 = s.x[2]
iqr <- q3 - q1
list(souti=q1-3*iqr,mouti=q1-1.5*iqr,min = s.x[1], q1=q1, q2=s.x[3],q3=q3,max=s.x[6], mouts=q3+1.5*iqr, souts=q3+3*iqr)
}
# Outliers
var_out <- calcQ(df$price)
llout_price <- df[which((df$price < var_out$souti) | (df$price > var_out$souts)), "price"]
llout_price
df[llout_price, "price"] <- NA
var_out <- calcQ(df$mpg)
llout_mpg <- df[which((df$mpg < var_out$souti) | (df$mpg > var_out$souts)), "mpg"]
llout_mpg
df[llout_mpg, "mpg"] <- NA
var_out <- calcQ(df$mileage)
llout_mileage <- df[which((df$mileage < var_out$souti) | (df$mileage > var_out$souts)), "mileage"]
llout_mileage
df[llout_mileage, "mileage"] <- NA
var_out <- calcQ(df$engineSize)
llout_engineSize <- df[which((df$engineSize < var_out$souti) | (df$engineSize > var_out$souts)), "engineSize"]
llout_engineSize
df[llout_engineSize, "engineSize"] <- NA
n_missings <- colSums(is.na(df))
n_missings
load("Cars.RData")
df$model <- factor(df$model)
df$transmission <- factor(df$transmission)
df$fuelType <- factor(df$fuelType)
df$manufacturer <- factor(df$manufacturer)
df$car_id <- as.character(c(1:nrow(df)))
# Errors
df[which(df$engineSize <= 0), "engineSize"] <- NA
hist(df$year)
plot(df$fuelType)
df[which(df$fuelType == "Other"), "fuelType"] <- NA
hist(df$mileage)
df[which(df$mileage >= 250000), "mileage"] <- NA
plot(df$mpg)
df[which(df$fuelType == "Hybrid" & df$mpg <= 20), "mpg"] <- NA
# affected vars
n_missings <- colSums(is.na(df))
n_missings
calcQ <- function(x){
s.x <- summary(x)
q3 = s.x[5]
q1 = s.x[2]
iqr <- q3 - q1
list(souti=q1-3*iqr,mouti=q1-1.5*iqr,min = s.x[1], q1=q1, q2=s.x[3],q3=q3,max=s.x[6], mouts=q3+1.5*iqr, souts=q3+3*iqr)
}
# Outliers
var_out <- calcQ(df$price)
llout_price <- which((df$price < var_out$souti) | (df$price > var_out$souts))
llout_price
df[llout_price, "price"] <- NA
var_out <- calcQ(df$mpg)
llout_mpg <- which((df$mpg < var_out$souti) | (df$mpg > var_out$souts))
llout_mpg
df[llout_mpg, "mpg"] <- NA
var_out <- calcQ(df$mileage)
llout_mileage <- which((df$mileage < var_out$souti) | (df$mileage > var_out$souts))
llout_mileage
df[llout_mileage, "mileage"] <- NA
var_out <- calcQ(df$engineSize)
llout_engineSize <- which((df$engineSize < var_out$souti) | (df$engineSize > var_out$souts))
llout_engineSize
df[llout_engineSize, "engineSize"] <- NA
n_missings <- colSums(is.na(df))
n_missings
var_out <- calcQ(df$tax)
llout_tax <- which((df$tax < var_out$souti) | (df$tax > var_out$souts))
llout_tax
df[llout_tax, "tax"] <- NA
n_missings <- colSums(is.na(df))
n_missings
llout_mpg
# imputePCA
library(missMDA)
res.impca <- imputePCA(df[,c("price","mpg","mileage","engineSize","tax", "year")],ncp = 5)
hist(df$tax)
par(mfrow=c(1,2))
hist(df$tax)
hist(res.impca$completeObs$tax)
hist(res.impca$completeObs[,"tax"])
par(mfrow=c(1,2))
hist(df$tax)
hist(res.impca$completeObs[,"tax"])
par(mfrow=c(1,2))
hist(df$tax)
hist(res.impca$completeObs[,"tax"])
df[,c("price","mpg","mileage","engineSize","tax", "year")] <- res.impca$completeObs[,c("price","mpg","mileage","engineSize","tax", "year")]
library(FactoMineR)
mout <- Moutlier(df[,c("price","mpg","mileage","engineSize","tax", "year")])
library(chemometrics)
mout <- Moutlier(df[,c("price","mpg","mileage","engineSize","tax", "year")], quantile = 0.999, plot = TRUE)
mout <- Moutlier(df[,c("price","mpg","mileage","engineSize", "year")], quantile = 0.999, plot = TRUE)
mout$cutoff
library(chemometrics)
mout <- Moutlier(df[,c("price","mpg","mileage","engineSize", "year")], quantile = 0.999, plot = TRUE)
mout$cutoff
length(which(mout$rd > mout$cutoff))
length(which(mout$rd > 25))
length(which(mout$rd > 30))
length(which(mout$rd > 35))
length(which(mout$rd > 40))
length(which(mout$rd > 50))
length(which(mout$rd > 55))
length(which(mout$rd > 60))
length(which(mout$rd > 52))
length(which(mout$rd > 50))
length(which(mout$rd > 55))
mo <- which(mout$rd > 55)
df$mout <- 0
df$mout[mo] <- 1
df$mout <- factor(df$mout, labels=c("NoMOut", "YesMOut"))
table(df$mout)
library(FactoMineR)
res.condes <- condes(df[,-c(11)], 3, proba = 0.01)
res.condes$quanti
res.condes$quali
res.condes$quanti
df_categories <- as.data.frame(res.condes$category)
df_categories[order(df_categories$Estimate, decreasing = TRUE),]
View(df_categories)
table(df$mout)
res.pca <- PCA(df[,-c(11,12)], quanti.sup = 3, quali.sup = c(1,4,6,10), ind.sup = which(df$mout=="YesMOut"))
res.pca$eig
plot.PCA(res.pca)
plot.PCA(res.pca, choix = "var")
library(factoextra)
install.package(factoextra)
package.install(factoextra)
install.packages(factoextra)
library(factoextra)
library(factoextra)
install.packages("factoextra")
library(factoextra)
fviz_contrib(res.pca, choice = "var", axes = 1:2)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
res.pca$var
mout <- Moutlier(df[,c("price","mpg","mileage","engineSize", "year")], quantile = 0.999, plot = TRUE)
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("effects","FactoMineR","car","missMDA","mvoutlier","chemometrics", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
load(paste0(filepath,"MyOldCars-1000Clean.RData"))
load(paste0(filepath,"MyOldCars-1000Clean.RData"))
load(paste0("MyOldCars-1000Clean.RData"))
options(contrasts=c("contr.treatment","contr.treatment"))
res.pca<-PCA(df[,c("price",vars_con)])  # Not correct: Target should be supplementary
c(vars_res, vars_dis,vars_con, "mout")
# Clean workspace
rm(list=ls())
load(paste0("MyOldCars-1000Clean.RData"))
View(df)
load("MyOldCars-1000Clean.RData")
# Clean workspace
rm(list=ls())
load("MyOldCars-1000Clean.RData")
# Clean workspace
rm(list=ls())
load(paste0("MyOldCars-1000Clean.RData"))
res.pca<-PCA(df[,c("price",vars_con)])  # Not correct: Target should be supplementary
View(df)
c(vars_res, vars_dis,vars_con, "mout")
res.pca<-PCA(df[,c(vars_res, vars_dis,vars_con)],quali.sup=c(2:13),quanti.sup= c(1))
View(df)
View(df)
View(df)
